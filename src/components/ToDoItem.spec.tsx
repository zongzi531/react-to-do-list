import * as React from 'react'
import { shallow, configure } from 'enzyme'
import * as Adapter from 'enzyme-adapter-react-16'
import { Input, Icon } from 'antd'
import ToDoItem from './ToDoItem'

configure({ adapter: new Adapter() })

test('renders ToDoItem component when passed in', () => {
  const haveFn1 = jest.fn()
  const removeFn1 = jest.fn()
  const inputChangeFn1 = jest.fn()
  const keyupFn1 = jest.fn()
  const blurFn1 = jest.fn()
  const changelisttextFn2 = jest.fn()
  const item1 = { color: 'icr1', todoId: 'it1', content: 'ict1', status: 'is1' }
  const todoItem1 = shallow(<ToDoItem undo={true} removeClick={removeFn1} haveClick={haveFn1} nowIndex={0} index={0} onInputChange={inputChangeFn1} onKeyUp={keyupFn1} onBlur={blurFn1} />)
  const todoItem2 = shallow(<ToDoItem undo={false} removeClick={removeFn1} haveClick={haveFn1} nowIndex={0} index={1} changeListText={changelisttextFn2} value={item1} />)
  const todoItem3 = shallow(<ToDoItem undo={true} removeClick={removeFn1} haveClick={haveFn1}/>)
  const haveIcon1 = todoItem1.find(Icon).at(0)
  const haveIcon2 = todoItem2.find(Icon).at(0)
  const removeIcon1 = todoItem1.find(Icon).at(1)
  const input1 = todoItem1.find(Input)
  const input3 = todoItem3.find(Input)
  const listtext1 = todoItem1.find('.list-text')
  const listtext2 = todoItem2.find('.list-text')
  const listtext3 = todoItem3.find('.list-text')
  haveIcon1.simulate('click')
  removeIcon1.simulate('click')
  input1.simulate('change', { target: { value: '1' } })
  input3.simulate('change', { target: { value: '1' } })
  input1.simulate('keyup', { keyCode: 13 })
  input3.simulate('keyup', { keyCode: 13 })
  input1.simulate('blur')
  input3.simulate('blur')
  listtext2.simulate('click')
  listtext3.simulate('click')
  expect(todoItem1.hasClass('bg-')).toBeTruthy()
  expect(todoItem2.hasClass('bg-icr1')).toBeTruthy()
  expect(haveFn1).toHaveBeenCalled()
  expect(removeFn1).toHaveBeenCalled()
  expect(todoItem1.find('.through').length).toEqual(0)
  expect(todoItem2.find('.through').length).toEqual(1)
  expect(haveIcon1.prop('type')).toEqual('star-o')
  expect(haveIcon2.prop('type')).toEqual('star')
  expect(inputChangeFn1).toHaveBeenCalled()
  expect(keyupFn1).toHaveBeenCalled()
  expect(blurFn1).toHaveBeenCalled()
  expect(changelisttextFn2).toHaveBeenCalled()
  expect(listtext1.props().title).toEqual('')
  expect(listtext2.props().title).toEqual('ict1')
  expect(listtext1.find('span').text()).toEqual('')
  expect(listtext2.find('span').text()).toEqual('ict1')
})